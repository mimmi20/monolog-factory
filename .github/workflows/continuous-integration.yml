# https://help.github.com/en/categories/automating-your-workflow-with-github-actions

name: "Continuous Integration"

on:
  - pull_request
  - push

permissions:
  contents: read

concurrency:
  group: "${{ github.event_name }}-${{ github.workflow }}-${{ github.head_ref || github.run_id }}-${{ github.ref }}"
  cancel-in-progress: true

jobs:
  ci:
    name: "Run CI"

    uses: "mimmi20/template/.github/workflows/ci.yml@master"
    with:
      extensions: "dom, iconv, intl, mbstring, simplexml, tokenizer, xml, xmlwriter, openssl, amqp, sockets, curl, intl"
      ini-values: "opcache.enable=1, opcache.fast_shutdown=0, zend.assertions=1, assert.exception=On, intl.default_locale=de, intl.use_exceptions=1, zend.exception_ignore_args=0"
      composer-options: "--optimize-autoloader --prefer-dist --prefer-stable -v"
      composer-outdated-option: ""
      skip-phpstan: false
      skip-phplint: false
      skip-rector: false
      skip-phpmd: false
    secrets:
      envPAT: "${{ secrets.GITHUB_TOKEN }}"

  tests-monolog-without-extensions:
    name: "UnitTests with PHPUnit for monolog/monolog 3 without extensions"

    needs: "ci"

    runs-on: "${{ matrix.operating-system }}"

    continue-on-error: false

    strategy:
      fail-fast: false

      matrix:
        operating-system:
          - "ubuntu-20.04"
          - "ubuntu-22.04"

        php-version:
          - "8.1"
          - "8.2"

        dependencies:
          - "highest"
          - "lowest"

        psr-log-version:
          - "2"
          - "3"

        ts:
          - "ts"
          - "nts"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v3"
        with:
          # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 0
          lfs: false
          persist-credentials: false

      - name: "Run CouchDB"
        timeout-minutes: 3
        continue-on-error: true
        uses: "cobot/couchdb-action@master"
        with:
          couchdb version: "2.3.1"

      - name: "Install PHP"
        uses: "shivammathur/setup-php@2.24.0"
        with:
          php-version: "${{ matrix.php-version }}"
          extensions: "phar, json, opcache, dom, iconv, intl, mbstring, simplexml, tokenizer, xmlwriter, :mongodb, :amqp, :sockets, :curl"
          ini-values: "opcache.enable=1, opcache.fast_shutdown=0, zend.assertions=1, assert.exception=On, intl.default_locale=de, intl.use_exceptions=1, zend.exception_ignore_args=0"
          coverage: "none"
          tools: "composer:v2"
        env:
          fail-fast: true
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          phpts: "${{ matrix.ts }}"

      - name: "Require psr/log ${{ matrix.psr-log-version }}"
        run: "composer require --no-update psr/log:^${{ matrix.psr-log-version }}"

      - name: "Remove dependencies with composer"
        run: "composer remove --no-update --dev actived/microsoft-teams-notifier"

      - name: "Remove dependencies with composer"
        if: "matrix.psr-log-version >= '3'"
        run: "composer remove --no-update --dev graylog2/gelf-php"

      - name: "Update dependencies with composer"
        uses: "ramsey/composer-install@2.2.0"
        with:
          dependency-versions: "${{ matrix.dependencies }}"
          composer-options: "--optimize-autoloader --prefer-dist --prefer-stable -v"

      - name: "Run unit tests with phpunit/phpunit"
        run: "vendor/bin/phpunit -c phpunit.xml --no-coverage"

  tests-monolog-with-mongodb:
    name: "UnitTests with PHPUnit for monolog/monolog 3 with mongodb"

    needs: "ci"

    runs-on: "${{ matrix.operating-system }}"

    continue-on-error: false

    strategy:
      fail-fast: false

      matrix:
        operating-system:
          - "ubuntu-20.04"

        php-version:
          - "8.1"
          - "8.2"

        dependencies:
          - "highest"
          - "lowest"

        psr-log-version:
          - "2"
          - "3"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v3"
        with:
          # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 0
          lfs: false
          persist-credentials: false

      - name: "Run CouchDB"
        timeout-minutes: 3
        continue-on-error: true
        uses: "cobot/couchdb-action@master"
        with:
          couchdb version: "2.3.1"

      - name: "Run MongoDB"
        uses: "supercharge/mongodb-github-action@v1.9.0"
        with:
          mongodb-version: "5.0"

      - name: "Install PHP"
        uses: "shivammathur/setup-php@2.24.0"
        with:
          php-version: "${{ matrix.php-version }}"
          extensions: "phar, json, opcache, dom, iconv, intl, mbstring, simplexml, tokenizer, xmlwriter, mongodb, :amqp, :sockets, :curl"
          ini-values: "opcache.enable=1, opcache.fast_shutdown=0, zend.assertions=1, assert.exception=On, intl.default_locale=de, intl.use_exceptions=1, zend.exception_ignore_args=0"
          coverage: "none"
          tools: "composer:v2"
        env:
          fail-fast: true
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          phpts: "ts"

      - name: "Add require for mongodb/mongodb to make tests runnable"
        run: "composer require mongodb/mongodb --dev --no-update"

      - name: "Require psr/log ${{ matrix.psr-log-version }}"
        run: "composer require --no-update psr/log:^${{ matrix.psr-log-version }}"

      - name: "Remove dependencies with composer"
        run: "composer remove --no-update --dev actived/microsoft-teams-notifier"

      - name: "Remove dependencies with composer"
        if: "matrix.psr-log-version >= '3'"
        run: "composer remove --no-update --dev graylog2/gelf-php"

      - name: "Update dependencies with composer"
        uses: "ramsey/composer-install@2.2.0"
        with:
          dependency-versions: "${{ matrix.dependencies }}"
          composer-options: "--optimize-autoloader --prefer-dist --prefer-stable -v"

      - name: "Run unit tests with phpunit/phpunit"
        run: "vendor/bin/phpunit -c phpunit.xml --no-coverage"

  tests-monolog-with-curl:
    name: "UnitTests with PHPUnit for monolog/monolog 3 with curl"

    needs: "ci"

    runs-on: "${{ matrix.operating-system }}"

    continue-on-error: false

    strategy:
      fail-fast: false

      matrix:
        operating-system:
          - "ubuntu-20.04"
          - "ubuntu-22.04"

        php-version:
          - "8.1"
          - "8.2"

        dependencies:
          - "highest"
          - "lowest"

        psr-log-version:
          - "2"
          - "3"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v3"
        with:
          # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 0
          lfs: false
          persist-credentials: false

      - name: "Run CouchDB"
        timeout-minutes: 3
        continue-on-error: true
        uses: "cobot/couchdb-action@master"
        with:
          couchdb version: "2.3.1"

      - name: "Install PHP"
        uses: "shivammathur/setup-php@2.24.0"
        with:
          php-version: "${{ matrix.php-version }}"
          extensions: "phar, json, opcache, dom, iconv, intl, mbstring, simplexml, tokenizer, xmlwriter, :mongodb, :amqp, :sockets, curl"
          ini-values: "opcache.enable=1, opcache.fast_shutdown=0, zend.assertions=1, assert.exception=On, intl.default_locale=de, intl.use_exceptions=1, zend.exception_ignore_args=0"
          coverage: "none"
          tools: "composer:v2"
        env:
          fail-fast: true
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          phpts: "ts"

      - name: "Require psr/log ${{ matrix.psr-log-version }}"
        run: "composer require --no-update psr/log:^${{ matrix.psr-log-version }}"

      - name: "Remove dependencies with composer"
        if: "matrix.psr-log-version >= '3'"
        run: "composer remove --no-update --dev graylog2/gelf-php"

      - name: "Update dependencies with composer"
        uses: "ramsey/composer-install@2.2.0"
        with:
          dependency-versions: "${{ matrix.dependencies }}"
          composer-options: "--optimize-autoloader --prefer-dist --prefer-stable -v"

      - name: "Run unit tests with phpunit/phpunit"
        run: "vendor/bin/phpunit -c phpunit.xml --no-coverage"

  tests-monolog-with-sockets:
    name: "UnitTests with PHPUnit for monolog/monolog 3 with sockets"

    needs: "ci"

    runs-on: "${{ matrix.operating-system }}"

    continue-on-error: false

    strategy:
      fail-fast: false

      matrix:
        operating-system:
          - "ubuntu-20.04"
          - "ubuntu-22.04"

        php-version:
          - "8.1"
          - "8.2"

        dependencies:
          - "highest"
          - "lowest"

        psr-log-version:
          - "2"
          - "3"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v3"
        with:
          # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 0
          lfs: false
          persist-credentials: false

      - name: "Run CouchDB"
        timeout-minutes: 3
        continue-on-error: true
        uses: "cobot/couchdb-action@master"
        with:
          couchdb version: "2.3.1"

      - name: "Install PHP"
        uses: "shivammathur/setup-php@2.24.0"
        with:
          php-version: "${{ matrix.php-version }}"
          extensions: "phar, json, opcache, dom, iconv, intl, mbstring, simplexml, tokenizer, xmlwriter, :mongodb, :amqp, sockets, :curl"
          ini-values: "opcache.enable=1, opcache.fast_shutdown=0, zend.assertions=1, assert.exception=On, intl.default_locale=de, intl.use_exceptions=1, zend.exception_ignore_args=0"
          coverage: "none"
          tools: "composer:v2"
        env:
          fail-fast: true
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          phpts: "ts"

      - name: "Require psr/log ${{ matrix.psr-log-version }}"
        run: "composer require --no-update psr/log:^${{ matrix.psr-log-version }}"

      - name: "Remove dependencies with composer"
        run: "composer remove --no-update --dev actived/microsoft-teams-notifier"

      - name: "Remove dependencies with composer"
        if: "matrix.psr-log-version >= '3'"
        run: "composer remove --no-update --dev graylog2/gelf-php"

      - name: "Update dependencies with composer"
        uses: "ramsey/composer-install@2.2.0"
        with:
          dependency-versions: "${{ matrix.dependencies }}"
          composer-options: "--optimize-autoloader --prefer-dist --prefer-stable -v"

      - name: "Run unit tests with phpunit/phpunit"
        run: "vendor/bin/phpunit -c phpunit.xml --no-coverage"

  tests-monolog-with-amqp:
    name: "UnitTests with PHPUnit for monolog/monolog 3 with amqp"

    needs: "ci"

    runs-on: "${{ matrix.operating-system }}"

    continue-on-error: false

    strategy:
      fail-fast: false

      matrix:
        operating-system:
          - "ubuntu-20.04"
          - "ubuntu-22.04"

        php-version:
          - "8.1"
          - "8.2"

        dependencies:
          - "highest"
          - "lowest"

        psr-log-version:
          - "2"
          - "3"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v3"
        with:
          # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 0
          lfs: false
          persist-credentials: false

      - name: "Run CouchDB"
        timeout-minutes: 3
        continue-on-error: true
        uses: "cobot/couchdb-action@master"
        with:
          couchdb version: "2.3.1"

      - name: "Install PHP"
        uses: "shivammathur/setup-php@2.24.0"
        with:
          php-version: "${{ matrix.php-version }}"
          extensions: "phar, json, opcache, dom, iconv, intl, mbstring, simplexml, tokenizer, xmlwriter, :mongodb, amqp, :sockets, :curl"
          ini-values: "opcache.enable=1, opcache.fast_shutdown=0, zend.assertions=1, assert.exception=On, intl.default_locale=de, intl.use_exceptions=1, zend.exception_ignore_args=0"
          coverage: "none"
          tools: "composer:v2"
        env:
          fail-fast: true
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          phpts: "ts"

      - name: "Require psr/log ${{ matrix.psr-log-version }}"
        run: "composer require --no-update psr/log:^${{ matrix.psr-log-version }}"

      - name: "Remove dependencies with composer"
        run: "composer remove --no-update --dev actived/microsoft-teams-notifier"

      - name: "Remove dependencies with composer"
        if: "matrix.psr-log-version >= '3'"
        run: "composer remove --no-update --dev graylog2/gelf-php"

      - name: "Update dependencies with composer"
        uses: "ramsey/composer-install@2.2.0"
        with:
          dependency-versions: "${{ matrix.dependencies }}"
          composer-options: "--optimize-autoloader --prefer-dist --prefer-stable -v"

      - name: "Run unit tests with phpunit/phpunit"
        run: "vendor/bin/phpunit -c phpunit.xml --no-coverage"

  code-coverage-without-extensions:
    name: "Code Coverage with PHPUnit without extensions"

    needs: "tests-monolog-without-extensions"

    runs-on: "${{ matrix.operating-system }}"

    continue-on-error: false

    strategy:
      fail-fast: false

      matrix:
        operating-system:
          - "ubuntu-20.04"
          - "ubuntu-22.04"

        php-version:
          - "8.1"
          - "8.2"

        dependencies:
          - "highest"
          - "lowest"

        psr-log-version:
          - "2"
          - "3"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v3"
        with:
          # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 0
          lfs: false
          persist-credentials: false

      - name: "Run CouchDB"
        timeout-minutes: 3
        continue-on-error: true
        uses: "cobot/couchdb-action@master"
        with:
          couchdb version: "2.3.1"

      - name: "Install PHP"
        uses: "shivammathur/setup-php@2.24.0"
        with:
          php-version: "${{ matrix.php-version }}"
          extensions: "phar, json, opcache, dom, iconv, intl, mbstring, simplexml, tokenizer, xmlwriter, openssl, :mongodb, :amqp, :sockets, :curl, ctype"
          ini-values: "opcache.enable=1, opcache.fast_shutdown=0, zend.assertions=1, assert.exception=On, intl.default_locale=de, intl.use_exceptions=1, zend.exception_ignore_args=0"
          coverage: "xdebug"
          tools: "composer:v2"
        env:
          fail-fast: true
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          phpts: "ts"

      - name: "Require psr/log ${{ matrix.psr-log-version }}"
        run: "composer require --no-update psr/log:^${{ matrix.psr-log-version }}"

      - name: "Remove dependencies with composer"
        run: "composer remove --no-update --dev actived/microsoft-teams-notifier"

      - name: "Remove dependencies with composer"
        if: "matrix.psr-log-version >= '3'"
        run: "composer remove --no-update --dev graylog2/gelf-php"

      - name: "Update dependencies with composer"
        uses: "ramsey/composer-install@2.2.0"
        with:
          dependency-versions: "${{ matrix.dependencies }}"
          composer-options: "--optimize-autoloader --prefer-dist --prefer-stable -v"

      - name: "Create cache directory for phpunit/phpunit"
        run: "mkdir -p .build/coverage"

      - name: "Collect code coverage with Xdebug and phpunit/phpunit"
        run: "vendor/bin/phpunit -c phpunit.xml --coverage-clover=.build/coverage/clover.xml --coverage-text --coverage-xml=.build/coverage/coverage-xml --log-junit=.build/coverage/phpunit.junit.xml"

      - name: "Upload coverage to Codecov"
        uses: "codecov/codecov-action@v3.1.2"
        with:
          file: ".build/coverage/clover.xml"
          flags: "phpunit,php-${{ matrix.php-version }},${{ matrix.operating-system }},without-extensions"
          verbose: false

      - name: "Run mutation tests with infection/infection"
        run: "vendor/bin/infection --show-mutations --min-covered-msi=89 --min-msi=89 --coverage=.build/coverage --only-covered --logger-github --no-progress -vv"

  code-coverage-without-extensions-for-elaticsearch-8:
    name: "Code Coverage with PHPUnit for Elasticsearch 8"

    needs: "tests-monolog-without-extensions"

    runs-on: "${{ matrix.operating-system }}"

    continue-on-error: false

    strategy:
      fail-fast: false

      matrix:
        operating-system:
          - "ubuntu-20.04"
          - "ubuntu-22.04"

        php-version:
          - "8.1"
          - "8.2"

        dependencies:
          - "highest"
          - "lowest"

        psr-log-version:
          - "2"
          - "3"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v3"
        with:
          # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 0
          lfs: false
          persist-credentials: false

      - name: "Run CouchDB"
        timeout-minutes: 3
        continue-on-error: true
        uses: "cobot/couchdb-action@master"
        with:
          couchdb version: "2.3.1"

      - name: "Install PHP"
        uses: "shivammathur/setup-php@2.24.0"
        with:
          php-version: "${{ matrix.php-version }}"
          extensions: "phar, json, opcache, dom, iconv, intl, mbstring, simplexml, tokenizer, xmlwriter, openssl, :mongodb, :amqp, :sockets, :curl, ctype"
          ini-values: "opcache.enable=1, opcache.fast_shutdown=0, zend.assertions=1, assert.exception=On, intl.default_locale=de, intl.use_exceptions=1, zend.exception_ignore_args=0, xdebug.mode=coverage"
          coverage: "xdebug"
          tools: "composer:v2"
        env:
          fail-fast: true
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          phpts: "ts"

      - name: "Require psr/log ${{ matrix.psr-log-version }}"
        run: "composer require --no-update psr/log:^${{ matrix.psr-log-version }}"

      - name: "Remove dependencies with composer"
        run: "composer remove --no-update --dev actived/microsoft-teams-notifier ruflin/elastica ezimuel/ringphp"

      - name: "Remove dependencies with composer"
        if: "matrix.psr-log-version >= '3'"
        run: "composer remove --no-update --dev graylog2/gelf-php"

      - name: "Require elasticsearch/elasticsearch:v8"
        run: "composer require --no-update --no-interaction --prefer-dist --prefer-stable --dev \"elasticsearch/elasticsearch:^8\""

      - name: "Update dependencies with composer"
        uses: "ramsey/composer-install@2.2.0"
        with:
          dependency-versions: "${{ matrix.dependencies }}"
          composer-options: "--optimize-autoloader --prefer-dist --prefer-stable -v"

      - name: "Create cache directory for phpunit/phpunit"
        run: "mkdir -p .build/coverage"

      - name: "Collect code coverage with Xdebug and phpunit/phpunit"
        run: "vendor/bin/phpunit -c phpunit.xml --coverage-clover=.build/coverage/clover.xml --coverage-text --coverage-xml=.build/coverage/coverage-xml --log-junit=.build/coverage/phpunit.junit.xml"

      - name: "Upload coverage to Codecov"
        uses: "codecov/codecov-action@v3.1.2"
        with:
          file: ".build/coverage/clover.xml"
          flags: "phpunit,php-${{ matrix.php-version }},${{ matrix.operating-system }},elasticsearch-8"
          verbose: false

      - name: "Run mutation tests with infection/infection"
        run: "vendor/bin/infection --show-mutations --min-covered-msi=89 --min-msi=89 --coverage=.build/coverage --only-covered --logger-github --no-progress -vv"

  code-coverage-with-curl-for-elaticsearch-8:
    name: "Code Coverage with PHPUnit for Elasticsearch 8 with curl"

    needs: "tests-monolog-without-extensions"

    runs-on: "${{ matrix.operating-system }}"

    continue-on-error: false

    strategy:
      fail-fast: false

      matrix:
        operating-system:
          - "ubuntu-20.04"
          - "ubuntu-22.04"

        php-version:
          - "8.1"
          - "8.2"

        dependencies:
          - "highest"
          - "lowest"

        psr-log-version:
          - "2"
          - "3"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v3"
        with:
          # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 0
          lfs: false
          persist-credentials: false

      - name: "Run CouchDB"
        timeout-minutes: 3
        continue-on-error: true
        uses: "cobot/couchdb-action@master"
        with:
          couchdb version: "2.3.1"

      - name: "Install PHP"
        uses: "shivammathur/setup-php@2.24.0"
        with:
          php-version: "${{ matrix.php-version }}"
          extensions: "phar, json, opcache, dom, iconv, intl, mbstring, simplexml, tokenizer, xmlwriter, openssl, :mongodb, :amqp, :sockets, curl, ctype"
          ini-values: "opcache.enable=1, opcache.fast_shutdown=0, zend.assertions=1, assert.exception=On, intl.default_locale=de, intl.use_exceptions=1, zend.exception_ignore_args=0, xdebug.mode=coverage"
          coverage: "xdebug"
          tools: "composer:v2"
        env:
          fail-fast: true
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          phpts: "ts"

      - name: "Require psr/log ${{ matrix.psr-log-version }}"
        run: "composer require --no-update psr/log:^${{ matrix.psr-log-version }}"

      - name: "Remove dependencies with composer"
        run: "composer remove --no-update --dev ruflin/elastica ezimuel/ringphp"

      - name: "Remove dependencies with composer"
        if: "matrix.psr-log-version >= '3'"
        run: "composer remove --no-update --dev graylog2/gelf-php"

      - name: "Require elasticsearch/elasticsearch:v8"
        run: "composer require --no-update --no-interaction --prefer-dist --prefer-stable --dev \"elasticsearch/elasticsearch:^8\""

      - name: "Update dependencies with composer"
        uses: "ramsey/composer-install@2.2.0"
        with:
          dependency-versions: "${{ matrix.dependencies }}"
          composer-options: "--optimize-autoloader --prefer-dist --prefer-stable -v"

      - name: "Create cache directory for phpunit/phpunit"
        run: "mkdir -p .build/coverage"

      - name: "Collect code coverage with Xdebug and phpunit/phpunit"
        run: "vendor/bin/phpunit -c phpunit.xml --coverage-clover=.build/coverage/clover.xml --coverage-text --coverage-xml=.build/coverage/coverage-xml --log-junit=.build/coverage/phpunit.junit.xml"

      - name: "Upload coverage to Codecov"
        uses: "codecov/codecov-action@v3.1.2"
        with:
          file: ".build/coverage/clover.xml"
          flags: "phpunit,php-${{ matrix.php-version }},${{ matrix.operating-system }},elasticsearch-8,with-curl"
          verbose: false

      - name: "Run mutation tests with infection/infection"
        env:
          STRYKER_DASHBOARD_API_KEY: ${{ secrets.STRYKER_DASHBOARD_API_KEY }}
        run: "vendor/bin/infection --show-mutations --min-covered-msi=89 --min-msi=89 --coverage=.build/coverage --only-covered --logger-github --no-progress -vv"

  code-coverage-without-extensions-for-php-amqplib:
    name: "Code Coverage with PHPUnit for php-amqplib/php-amqplib"

    needs: "tests-monolog-without-extensions"

    runs-on: "${{ matrix.operating-system }}"

    continue-on-error: false

    strategy:
      fail-fast: false

      matrix:
        operating-system:
          - "ubuntu-20.04"
          - "ubuntu-22.04"

        php-version:
          - "8.1"
          - "8.2"

        dependencies:
          - "highest"
          - "lowest"

        psr-log-version:
          - "2"
          - "3"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v3"
        with:
          # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 0
          lfs: false
          persist-credentials: false

      - name: "Run CouchDB"
        timeout-minutes: 3
        continue-on-error: true
        uses: "cobot/couchdb-action@master"
        with:
          couchdb version: "2.3.1"

      - name: "Install PHP"
        uses: "shivammathur/setup-php@2.24.0"
        with:
          php-version: "${{ matrix.php-version }}"
          extensions: "phar, json, opcache, dom, iconv, intl, mbstring, simplexml, tokenizer, xmlwriter, openssl, :mongodb, :amqp, sockets, :curl, ctype"
          ini-values: "opcache.enable=1, opcache.fast_shutdown=0, zend.assertions=1, assert.exception=On, intl.default_locale=de, intl.use_exceptions=1, zend.exception_ignore_args=0, xdebug.mode=coverage"
          coverage: "xdebug"
          tools: "composer:v2"
        env:
          fail-fast: true
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          phpts: "ts"

      - name: "Require psr/log ${{ matrix.psr-log-version }}"
        run: "composer require --no-update psr/log:^${{ matrix.psr-log-version }}"

      - name: "Remove dependencies with composer"
        run: "composer remove --no-update --dev actived/microsoft-teams-notifier"

      - name: "Remove dependencies with composer"
        if: "matrix.psr-log-version >= '3'"
        run: "composer remove --no-update --dev graylog2/gelf-php"

      - name: "Require php-amqplib/php-amqplib:^3.3.1"
        run: "composer require --no-update --no-interaction --prefer-dist --prefer-stable --dev \"php-amqplib/php-amqplib:^3.3.1\""

      - name: "Update dependencies with composer"
        uses: "ramsey/composer-install@2.2.0"
        with:
          dependency-versions: "${{ matrix.dependencies }}"
          composer-options: "--optimize-autoloader --prefer-dist --prefer-stable -v"

      - name: "Create cache directory for phpunit/phpunit"
        run: "mkdir -p .build/coverage"

      - name: "Collect code coverage with Xdebug and phpunit/phpunit"
        run: "vendor/bin/phpunit -c phpunit.xml --coverage-clover=.build/coverage/clover.xml --coverage-text --coverage-xml=.build/coverage/coverage-xml --log-junit=.build/coverage/phpunit.junit.xml"

      - name: "Upload coverage to Codecov"
        uses: "codecov/codecov-action@v3.1.2"
        with:
          file: ".build/coverage/clover.xml"
          flags: "phpunit,php-${{ matrix.php-version }},${{ matrix.operating-system }},php-amqplib,with-sockets"
          verbose: false

      - name: "Run mutation tests with infection/infection"
        run: "vendor/bin/infection --show-mutations --min-covered-msi=90 --min-msi=87 --coverage=.build/coverage --only-covered --logger-github --no-progress -vv"

  code-coverage-without-extensions-for-swiftmailer:
    name: "Code Coverage with PHPUnit for swiftmailer"

    needs: "tests-monolog-without-extensions"

    runs-on: "${{ matrix.operating-system }}"

    continue-on-error: false

    strategy:
      fail-fast: false

      matrix:
        operating-system:
          - "ubuntu-20.04"
          - "ubuntu-22.04"

        php-version:
          - "8.1"
          - "8.2"

        dependencies:
          - "highest"
          - "lowest"

        psr-log-version:
          - "2"
          - "3"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v3"
        with:
          # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 0
          lfs: false
          persist-credentials: false

      - name: "Run CouchDB"
        timeout-minutes: 3
        continue-on-error: true
        uses: "cobot/couchdb-action@master"
        with:
          couchdb version: "2.3.1"

      - name: "Install PHP"
        uses: "shivammathur/setup-php@2.24.0"
        with:
          php-version: "${{ matrix.php-version }}"
          extensions: "phar, json, opcache, dom, iconv, intl, mbstring, simplexml, tokenizer, xmlwriter, openssl, :mongodb, :amqp, :sockets, :curl, ctype"
          ini-values: "opcache.enable=1, opcache.fast_shutdown=0, zend.assertions=1, assert.exception=On, intl.default_locale=de, intl.use_exceptions=1, zend.exception_ignore_args=0, xdebug.mode=coverage"
          coverage: "xdebug"
          tools: "composer:v2"
        env:
          fail-fast: true
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          phpts: "ts"

      - name: "Require psr/log ${{ matrix.psr-log-version }}"
        run: "composer require --no-update psr/log:^${{ matrix.psr-log-version }}"

      - name: "Remove dependencies with composer"
        run: "composer remove --no-update --dev actived/microsoft-teams-notifier"

      - name: "Remove dependencies with composer"
        if: "matrix.psr-log-version >= '3'"
        run: "composer remove --no-update --dev graylog2/gelf-php"

      - name: "Require swiftmailer/swiftmailer:6.3.0"
        run: "composer require --no-update --no-interaction --prefer-dist --prefer-stable --dev \"swiftmailer/swiftmailer:6.3.0\""

      - name: "Update dependencies with composer"
        uses: "ramsey/composer-install@2.2.0"
        with:
          dependency-versions: "${{ matrix.dependencies }}"
          composer-options: "--optimize-autoloader --prefer-dist --prefer-stable -v"

      - name: "Create cache directory for phpunit/phpunit"
        run: "mkdir -p .build/coverage"

      - name: "Collect code coverage with Xdebug and phpunit/phpunit"
        run: "vendor/bin/phpunit -c phpunit.xml --coverage-clover=.build/coverage/clover.xml --coverage-text --coverage-xml=.build/coverage/coverage-xml --log-junit=.build/coverage/phpunit.junit.xml"

      - name: "Upload coverage to Codecov"
        uses: "codecov/codecov-action@v3.1.2"
        with:
          file: ".build/coverage/clover.xml"
          flags: "phpunit,php-${{ matrix.php-version }},${{ matrix.operating-system }},swiftmailer"
          verbose: false

      - name: "Run mutation tests with infection/infection"
        run: "vendor/bin/infection --show-mutations --min-covered-msi=89 --min-msi=89 --coverage=.build/coverage --only-covered --logger-github --no-progress -vv"

#  code-coverage-without-extensions-for-cmdisp-monolog-microsoft-teams:
#    name: "Code Coverage with PHPUnit for cmdisp/monolog-microsoft-teams"
#
#    needs: "tests-monolog-without-extensions"
#
#    runs-on: "${{ matrix.operating-system }}"
#
#    continue-on-error: false
#
#    strategy:
#      fail-fast: false
#
#      matrix:
#        operating-system:
#          - "ubuntu-20.04"
#          - "ubuntu-22.04"
#
#        php-version:
#          - "8.1"
#          - "8.2"
#
#        dependencies:
#          - "highest"
#          - "lowest"
#
#        psr-log-version:
#          - "2"
#          - "3"
#
#    steps:
#      - name: "Checkout"
#        uses: "actions/checkout@v3"
#        with:
#          # Disabling shallow clone is recommended for improving relevancy of reporting
#          fetch-depth: 0
#          lfs: false
#          persist-credentials: false
#
#      - name: "Run CouchDB"
#        timeout-minutes: 3
#        continue-on-error: true
#        uses: "cobot/couchdb-action@master"
#        with:
#          couchdb version: "2.3.1"
#
#      - name: "Install PHP"
#        uses: "shivammathur/setup-php@2.24.0"
#        with:
#          php-version: "${{ matrix.php-version }}"
#          extensions: "phar, json, opcache, dom, iconv, intl, mbstring, simplexml, tokenizer, xmlwriter, openssl, :mongodb, :amqp, :sockets, :curl, ctype"
#          ini-values: "opcache.enable=1, opcache.fast_shutdown=0, zend.assertions=1, assert.exception=On, intl.default_locale=de, intl.use_exceptions=1, zend.exception_ignore_args=0, xdebug.mode=coverage"
#          coverage: "xdebug"
#          tools: "composer:v2"
#        env:
#          fail-fast: true
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#          phpts: "ts"
#
#      - name: "Require psr/log ${{ matrix.psr-log-version }}"
#        run: "composer require --no-update psr/log:^${{ matrix.psr-log-version }}"
#
#      - name: "Remove dependencies with composer"
#        run: "composer remove --no-update --dev actived/microsoft-teams-notifier"
#
#      - name: "Remove dependencies with composer"
#        if: "matrix.psr-log-version >= '3'"
#        run: "composer remove --no-update --dev graylog2/gelf-php"
#
#      - name: "Require cmdisp/monolog-microsoft-teams:^1.2.0"
#        run: "composer require --no-update --no-interaction --prefer-dist --prefer-stable --dev \"cmdisp/monolog-microsoft-teams:^1.2.0\""
#
#      - name: "Update dependencies with composer"
#        uses: "ramsey/composer-install@v2"
#        with:
#          dependency-versions: "${{ matrix.dependencies }}"
#          composer-options: "--optimize-autoloader --prefer-dist --prefer-stable -v"
#
#      - name: "Create cache directory for phpunit/phpunit"
#        run: "mkdir -p .build/coverage"
#
#      - name: "Collect code coverage with Xdebug and phpunit/phpunit"
#        run: "vendor/bin/phpunit -c phpunit.xml --coverage-clover=.build/coverage/clover.xml --coverage-text --coverage-xml=.build/coverage/coverage-xml --log-junit=.build/coverage/phpunit.junit.xml"
#
#      - name: "Upload coverage to Codecov"
#        uses: "codecov/codecov-action@v3.1.1"
#        with:
#          file: ".build/coverage/clover.xml"
#          flags: "phpunit,php-${{ matrix.php-version }},${{ matrix.operating-system }},cmdisp-monolog-microsoft-teams"
#          verbose: false
#
#      - name: "Run mutation tests with infection/infection"
#        run: "vendor/bin/infection --show-mutations --min-covered-msi=90 --min-msi=87 --coverage=.build/coverage --only-covered --logger-github --no-progress -vv"

  code-coverage-with-sockets:
    name: "Code Coverage with PHPUnit with sockets"

    needs: "tests-monolog-with-sockets"

    runs-on: "${{ matrix.operating-system }}"

    continue-on-error: false

    strategy:
      fail-fast: false

      matrix:
        operating-system:
          - "ubuntu-20.04"
          - "ubuntu-22.04"

        php-version:
          - "8.1"
          - "8.2"

        dependencies:
          - "highest"
          - "lowest"

        psr-log-version:
          - "2"
          - "3"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v3"
        with:
          # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 0
          lfs: false
          persist-credentials: false

      - name: "Run CouchDB"
        timeout-minutes: 3
        continue-on-error: true
        uses: "cobot/couchdb-action@master"
        with:
          couchdb version: "2.3.1"

      - name: "Install PHP"
        uses: "shivammathur/setup-php@2.24.0"
        with:
          php-version: "${{ matrix.php-version }}"
          extensions: "phar, json, opcache, dom, iconv, intl, mbstring, simplexml, tokenizer, xmlwriter, openssl, :mongodb, :amqp, sockets, :curl, ctype"
          ini-values: "opcache.enable=1, opcache.fast_shutdown=0, zend.assertions=1, assert.exception=On, intl.default_locale=de, intl.use_exceptions=1, zend.exception_ignore_args=0, xdebug.mode=coverage"
          coverage: "xdebug"
          tools: "composer:v2"
        env:
          fail-fast: true
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          phpts: "ts"

      - name: "Require psr/log ${{ matrix.psr-log-version }}"
        run: "composer require --no-update psr/log:^${{ matrix.psr-log-version }}"

      - name: "Remove dependencies with composer"
        run: "composer remove --no-update --dev actived/microsoft-teams-notifier php-amqplib/php-amqplib"

      - name: "Remove dependencies with composer"
        if: "matrix.psr-log-version >= '3'"
        run: "composer remove --no-update --dev graylog2/gelf-php"

      - name: "Update dependencies with composer"
        uses: "ramsey/composer-install@2.2.0"
        with:
          dependency-versions: "${{ matrix.dependencies }}"
          composer-options: "--optimize-autoloader --prefer-dist --prefer-stable -v"

      - name: "Create cache directory for phpunit/phpunit"
        run: "mkdir -p .build/coverage"

      - name: "Collect code coverage with Xdebug and phpunit/phpunit"
        run: "vendor/bin/phpunit -c phpunit.xml --coverage-clover=.build/coverage/clover.xml --coverage-text --coverage-xml=.build/coverage/coverage-xml --log-junit=.build/coverage/phpunit.junit.xml"

      - name: "Upload coverage to Codecov"
        uses: "codecov/codecov-action@v3.1.2"
        with:
          file: ".build/coverage/clover.xml"
          flags: "phpunit,php-${{ matrix.php-version }},${{ matrix.operating-system }},with-sockets"
          verbose: false

      - name: "Run mutation tests with infection/infection"
        run: "vendor/bin/infection --show-mutations --min-covered-msi=89 --min-msi=89 --coverage=.build/coverage --only-covered --logger-github --no-progress -vv"

  code-coverage-with-curl:
    name: "Code Coverage with PHPUnit with curl"

    needs: "tests-monolog-with-curl"

    runs-on: "${{ matrix.operating-system }}"

    continue-on-error: false

    strategy:
      fail-fast: false

      matrix:
        operating-system:
          - "ubuntu-20.04"
          - "ubuntu-22.04"

        php-version:
          - "8.1"
          - "8.2"

        dependencies:
          - "highest"
          - "lowest"

        psr-log-version:
          - "2"
          - "3"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v3"
        with:
          # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 0
          lfs: false
          persist-credentials: false

      - name: "Run CouchDB"
        timeout-minutes: 3
        continue-on-error: true
        uses: "cobot/couchdb-action@master"
        with:
          couchdb version: "2.3.1"

      - name: "Install PHP"
        uses: "shivammathur/setup-php@2.24.0"
        with:
          php-version: "${{ matrix.php-version }}"
          extensions: "phar, json, opcache, dom, iconv, intl, mbstring, simplexml, tokenizer, xmlwriter, openssl, :mongodb, :amqp, :sockets, curl, ctype"
          ini-values: "opcache.enable=1, opcache.fast_shutdown=0, zend.assertions=1, assert.exception=On, intl.default_locale=de, intl.use_exceptions=1, zend.exception_ignore_args=0, xdebug.mode=coverage"
          coverage: "xdebug"
          tools: "composer:v2"
        env:
          fail-fast: true
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          phpts: "ts"

      - name: "Require psr/log ${{ matrix.psr-log-version }}"
        run: "composer require --no-update psr/log:^${{ matrix.psr-log-version }}"

      - name: "Remove dependencies with composer"
        if: "matrix.psr-log-version >= '3'"
        run: "composer remove --no-update --dev graylog2/gelf-php"

      - name: "Update dependencies with composer"
        uses: "ramsey/composer-install@2.2.0"
        with:
          dependency-versions: "${{ matrix.dependencies }}"
          composer-options: "--optimize-autoloader --prefer-dist --prefer-stable -v"

      - name: "Create cache directory for phpunit/phpunit"
        run: "mkdir -p .build/coverage"

      - name: "Collect code coverage with Xdebug and phpunit/phpunit"
        run: "vendor/bin/phpunit -c phpunit.xml --coverage-clover=.build/coverage/clover.xml --coverage-text --coverage-xml=.build/coverage/coverage-xml --log-junit=.build/coverage/phpunit.junit.xml"

      - name: "Upload coverage to Codecov"
        uses: "codecov/codecov-action@v3.1.2"
        with:
          file: ".build/coverage/clover.xml"
          flags: "phpunit,php-${{ matrix.php-version }},${{ matrix.operating-system }},with-curl"
          verbose: false

      - name: "Run mutation tests with infection/infection"
        env:
          STRYKER_DASHBOARD_API_KEY: ${{ secrets.STRYKER_DASHBOARD_API_KEY }}
        run: "vendor/bin/infection --show-mutations --min-covered-msi=89 --min-msi=89 --coverage=.build/coverage --only-covered --logger-github --no-progress -vv"

  code-coverage-with-mongodb:
    name: "Code Coverage with PHPUnit with mongodb"

    needs: "tests-monolog-with-mongodb"

    runs-on: "${{ matrix.operating-system }}"

    continue-on-error: false

    strategy:
      fail-fast: false

      matrix:
        operating-system:
          - "ubuntu-20.04"

        php-version:
          - "8.1"
          - "8.2"

        dependencies:
          - "highest"
          - "lowest"

        psr-log-version:
          - "2"
          - "3"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v3"
        with:
          # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 0
          lfs: false
          persist-credentials: false

      - name: "Run CouchDB"
        timeout-minutes: 3
        continue-on-error: true
        uses: "cobot/couchdb-action@master"
        with:
          couchdb version: "2.3.1"

      - name: "Install PHP"
        uses: "shivammathur/setup-php@2.24.0"
        with:
          php-version: "${{ matrix.php-version }}"
          extensions: "phar, json, opcache, dom, iconv, intl, mbstring, simplexml, tokenizer, xmlwriter, openssl, mongodb, :amqp, :sockets, :curl, ctype"
          ini-values: "opcache.enable=1, opcache.fast_shutdown=0, zend.assertions=1, assert.exception=On, intl.default_locale=de, intl.use_exceptions=1, zend.exception_ignore_args=0, xdebug.mode=coverage"
          coverage: "xdebug"
          tools: "composer:v2"
        env:
          fail-fast: true
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          phpts: "ts"

      - name: "Require psr/log ${{ matrix.psr-log-version }}"
        run: "composer require --no-update psr/log:^${{ matrix.psr-log-version }}"

      - name: "Remove dependencies with composer"
        run: "composer remove --no-update --dev actived/microsoft-teams-notifier"

      - name: "Remove dependencies with composer"
        if: "matrix.psr-log-version >= '3'"
        run: "composer remove --no-update --dev graylog2/gelf-php"

      - name: "Update dependencies with composer"
        uses: "ramsey/composer-install@2.2.0"
        with:
          dependency-versions: "${{ matrix.dependencies }}"
          composer-options: "--optimize-autoloader --prefer-dist --prefer-stable -v"

      - name: "Create cache directory for phpunit/phpunit"
        run: "mkdir -p .build/coverage"

      - name: "Collect code coverage with Xdebug and phpunit/phpunit"
        run: "vendor/bin/phpunit -c phpunit.xml --coverage-clover=.build/coverage/clover.xml --coverage-text --coverage-xml=.build/coverage/coverage-xml --log-junit=.build/coverage/phpunit.junit.xml"

      - name: "Upload coverage to Codecov"
        uses: "codecov/codecov-action@v3.1.2"
        with:
          file: ".build/coverage/clover.xml"
          flags: "phpunit,php-${{ matrix.php-version }},${{ matrix.operating-system }},with-mongodb"
          verbose: false

      - name: "Run mutation tests with infection/infection"
        run: "vendor/bin/infection --show-mutations --min-covered-msi=90 --min-msi=90 --coverage=.build/coverage --only-covered --logger-github --no-progress -vv"

  code-coverage-with-amqp:
    name: "Code Coverage with PHPUnit with amqp"

    needs: "tests-monolog-with-amqp"

    runs-on: "${{ matrix.operating-system }}"

    continue-on-error: false

    strategy:
      fail-fast: false

      matrix:
        operating-system:
          - "ubuntu-20.04"
          - "ubuntu-22.04"

        php-version:
          - "8.1"
          - "8.2"

        dependencies:
          - "highest"
          - "lowest"

        psr-log-version:
          - "2"
          - "3"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v3"
        with:
          # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 0
          lfs: false
          persist-credentials: false

      - name: "Run CouchDB"
        timeout-minutes: 3
        continue-on-error: true
        uses: "cobot/couchdb-action@master"
        with:
          couchdb version: "2.3.1"

      - name: "Install PHP"
        uses: "shivammathur/setup-php@2.24.0"
        with:
          php-version: "${{ matrix.php-version }}"
          extensions: "phar, json, opcache, dom, iconv, intl, mbstring, simplexml, tokenizer, xmlwriter, openssl, :mongodb, amqp, :sockets, :curl, ctype"
          ini-values: "opcache.enable=1, opcache.fast_shutdown=0, zend.assertions=1, assert.exception=On, intl.default_locale=de, intl.use_exceptions=1, zend.exception_ignore_args=0, xdebug.mode=coverage"
          coverage: "xdebug"
          tools: "composer:v2"
        env:
          fail-fast: true
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          phpts: "ts"

      - name: "Require psr/log ${{ matrix.psr-log-version }}"
        run: "composer require --no-update psr/log:^${{ matrix.psr-log-version }}"

      - name: "Remove dependencies with composer"
        run: "composer remove --no-update --dev actived/microsoft-teams-notifier"

      - name: "Remove dependencies with composer"
        if: "matrix.psr-log-version >= '3'"
        run: "composer remove --no-update --dev graylog2/gelf-php"

      - name: "Update dependencies with composer"
        uses: "ramsey/composer-install@2.2.0"
        with:
          dependency-versions: "${{ matrix.dependencies }}"
          composer-options: "--optimize-autoloader --prefer-dist --prefer-stable -v"

      - name: "Create cache directory for phpunit/phpunit"
        run: "mkdir -p .build/coverage"

      - name: "Collect code coverage with Xdebug and phpunit/phpunit"
        run: "vendor/bin/phpunit -c phpunit.xml --coverage-clover=.build/coverage/clover.xml --coverage-text --coverage-xml=.build/coverage/coverage-xml --log-junit=.build/coverage/phpunit.junit.xml"

      - name: "Upload coverage to Codecov"
        uses: "codecov/codecov-action@v3.1.2"
        with:
          file: ".build/coverage/clover.xml"
          flags: "phpunit,php-${{ matrix.php-version }},${{ matrix.operating-system }},with-amqp"
          verbose: false

      - name: "Run mutation tests with infection/infection"
        run: "vendor/bin/infection --show-mutations --min-covered-msi=89 --min-msi=89 --coverage=.build/coverage --only-covered --logger-github --no-progress -vv"


  # This is a meta job to avoid to have to constantly change the protection rules
  # whenever we touch the matrix.
  tests-status:
    name: "Unit & Integration Tests Status"
    runs-on: "ubuntu-22.04"
    needs:
      - "tests-monolog-without-extensions"
      - "tests-monolog-with-mongodb"
      - "tests-monolog-with-curl"
      - "tests-monolog-with-sockets"
      - "tests-monolog-with-amqp"
      - "code-coverage-without-extensions"
      - "code-coverage-without-extensions-for-elaticsearch-8"
      - "code-coverage-with-curl-for-elaticsearch-8"
      - "code-coverage-without-extensions-for-php-amqplib"
      - "code-coverage-without-extensions-for-swiftmailer"
      - "code-coverage-with-sockets"
      - "code-coverage-with-curl"
      - "code-coverage-with-mongodb"
      - "code-coverage-with-amqp"
    if: always()
    steps:
      - name: Successful run
        if: ${{ !(contains(needs.*.result, 'failure')) }}
        run: exit 0

      - name: Failing run
        if: ${{ contains(needs.*.result, 'failure') }}
        run: exit 1
